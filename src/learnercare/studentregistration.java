/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package learnercare;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author medoo
 */
public class studentregistration extends javax.swing.JFrame {
String OptionalCourse;
String Semester;
    boolean setVisible;

    /**
     * Creates new form studentregistration
     */
    public studentregistration() {
        initComponents();
        show_student();
    }
    public ArrayList<student> studentList(){
        ArrayList<student> studentList = new ArrayList<>();
        try{
     Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  // load the driver
            // line below needs to be modified to include the database name, user, and password (if any)
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=LearnerCare;user=medoo;password=medoo;");
            String query1= "SELECT * FROM student";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query1);
            student student;
            while(rs.next()){
                student = new student(rs.getInt("USN"),rs.getString("OptionalCourse"),rs.getString("Semester"),rs.getString("FirstName"),rs.getString("MiddleName"),rs.getString("LastName"));
                studentList.add(student);
            }
        }
         catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(studentregistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return studentList;
    }
    public void show_student(){
        ArrayList<student> list = studentList();
        DefaultTableModel model = (DefaultTableModel)stu_table.getModel();
        Object[] row = new Object [6];
        for(int i = 0; i<list.size();i++){
            row[0]=list.get(i).getUSN();
            row[1]=list.get(i).getOptionalCourse();
            row[2]=list.get(i).getSemester();
            row[3]=list.get(i).getFirstName();
            row[4]=list.get(i).getMiddleName();
            row[5]=list.get(i).getLastName();
            model.addRow(row);
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        studentreg = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        USN = new javax.swing.JTextField();
        fname = new javax.swing.JTextField();
        mname = new javax.swing.JTextField();
        lname = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        music = new javax.swing.JRadioButton();
        pe = new javax.swing.JRadioButton();
        elective = new javax.swing.JRadioButton();
        insertstu = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        sem1 = new javax.swing.JCheckBox();
        sem2 = new javax.swing.JCheckBox();
        summer = new javax.swing.JCheckBox();
        update_student = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        searchdata = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        stu_table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Student ID");

        jLabel2.setText("First Name:");

        jLabel3.setText("Middle Name:");

        jLabel4.setText("Last Name:");

        jLabel5.setText("Optional Courses");

        buttonGroup1.add(music);
        music.setText("Music Lessons");

        buttonGroup1.add(pe);
        pe.setText("Physical Education");

        buttonGroup1.add(elective);
        elective.setText("Elective Subjects");

        insertstu.setText("ADD Student");
        insertstu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertstuActionPerformed(evt);
            }
        });

        reset.setText("Reset Fields");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        jLabel6.setText("Semester");

        sem1.setText("Semester 1");

        sem2.setText("Semester 2");

        summer.setText("Summer Course");

        update_student.setText("Update Student");
        update_student.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_studentActionPerformed(evt);
            }
        });

        deletebtn.setText("Delete Student");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });

        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });

        jLabel7.setText("Search by USN:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(mname, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                            .addComponent(fname)
                            .addComponent(USN)
                            .addComponent(lname))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchdata, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(search))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(music)
                                    .addComponent(sem1)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(insertstu)
                                .addGap(18, 18, 18)
                                .addComponent(update_student)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sem2)
                                    .addComponent(pe))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                                .addComponent(deletebtn)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(elective)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(reset)
                                .addComponent(summer)))
                        .addGap(132, 132, 132))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(USN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchdata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(mname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(music)
                    .addComponent(elective)
                    .addComponent(pe))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(sem1)
                    .addComponent(sem2)
                    .addComponent(summer))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertstu)
                    .addComponent(update_student)
                    .addComponent(deletebtn)
                    .addComponent(reset))
                .addGap(63, 63, 63))
        );

        studentreg.addTab("Student Registration & Search", jPanel1);

        stu_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "USN", "Optional Course", "Semester", "First Name", "Middle Name", "Last Name"
            }
        ));
        stu_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stu_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(stu_table);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(122, Short.MAX_VALUE))
        );

        studentreg.addTab("Student Display Table", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studentreg))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studentreg))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertstuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertstuActionPerformed
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  // load the driver
            // line below needs to be modified to include the database name, user, and password (if any)
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=LearnerCare;user=medoo;password=medoo;");
            //SQL String queries
            String query ="insert into student(USN, FirstName, MiddleName, LastName, OptionalCourse, Semester)values(?,?,?,?,?,?)";
            PreparedStatement pst = con.prepareStatement(query);

            pst.setString(1,USN.getText());
            pst.setString(2,fname.getText());
            pst.setString(3,mname.getText());
            pst.setString(4,lname.getText());
            if(music.isSelected()){
                OptionalCourse="music";
            }
            if(pe.isSelected()){
                OptionalCourse="Physical Education";
            }
            if(elective.isSelected()){
                OptionalCourse="Other Elective Subjects";
            }

            pst.setString(5,OptionalCourse);

            if(sem1.isSelected()){
                Semester="Semester 1";
            }
            if(sem2.isSelected()){
                Semester="Semester 2";
            }
            if(summer.isSelected()){
                Semester="Summer Course";
            }
            pst.setString(6,Semester);
            pst.executeUpdate();
            DefaultTableModel model = (DefaultTableModel)stu_table.getModel();
            model.setRowCount(0);
            show_student();
            JOptionPane.showMessageDialog(null,"Student Added to Database Sucessfully");

        }
        catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(studentregistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_insertstuActionPerformed

    private void update_studentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_studentActionPerformed
        // TODO add your handling code here:
         try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  // load the driver
            // line below needs to be modified to include the database name, user, and password (if any)
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=LearnerCare;user=medoo;password=medoo;");
            //SQL String queries
            int row = stu_table.getSelectedRow();
            String value = (stu_table.getModel().getValueAt(row,0).toString());
            String query ="UPDATE student SET FirstName=?, MiddleName=?, LastName=?, OptionalCourse=?, Semester=? WHERE USN="+value;
            PreparedStatement pst = con.prepareStatement(query);

            
            pst.setString(1,fname.getText());
            pst.setString(2,mname.getText());
            pst.setString(3,lname.getText());
            if(music.isSelected()){
                OptionalCourse="music";
            }
            if(pe.isSelected()){
                OptionalCourse="Physical Education";
            }
            if(elective.isSelected()){
                OptionalCourse="Other Elective Subjects";
            }

            pst.setString(4,OptionalCourse);

            if(sem1.isSelected()){
                Semester="Semester 1";
            }
            if(sem2.isSelected()){
                Semester="Semester 2";
            }
            if(summer.isSelected()){
                Semester="Summer Course";
            }
            pst.setString(5,Semester);
            pst.executeUpdate();
            DefaultTableModel model = (DefaultTableModel)stu_table.getModel();
            model.setRowCount(0);
            show_student();
            JOptionPane.showMessageDialog(null,"Student Updated Sucessfully");
         }
         catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(studentregistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_update_studentActionPerformed

    private void stu_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stu_tableMouseClicked
        // TODO add your handling code here:
        int i = stu_table.getSelectedRow();
        TableModel model = stu_table.getModel();
        USN.setText(model.getValueAt(i, 0).toString());
        fname.setText(model.getValueAt(i, 3).toString());
        mname.setText(model.getValueAt(i, 4).toString());
        lname.setText(model.getValueAt(i, 5).toString());
        String Optionalcourse = model.getValueAt(i, 1).toString();
        if (Optionalcourse.equals("music")){
            music.setSelected(true);
            pe.setSelected(false);
            elective.setSelected(false);
        }
        if (Optionalcourse.equals("Physical Education")){
            music.setSelected(false);
            pe.setSelected(true);
            elective.setSelected(false);
        }
        if (Optionalcourse.equals("Other Elective Subjects")){
            music.setSelected(false);
            pe.setSelected(false);
            elective.setSelected(true);
        }
        
        if (Optionalcourse.equals("Other Elective Subjects")){
            music.setSelected(false);
            pe.setSelected(false);
            elective.setSelected(true);
        }
        String semester = model.getValueAt(i, 2).toString();
        if (semester.equals("Semester 1")){
            sem1.setSelected(true);
            sem2.setSelected(false);
            summer.setSelected(false);
        }
        if (semester.equals("Semester 2")){
            sem1.setSelected(false);
            sem2.setSelected(true);
            summer.setSelected(false);
        }
        if (semester.equals("Summer Course")){
            sem1.setSelected(false);
            sem2.setSelected(false);
            summer.setSelected(true);
        }
        
        
    }//GEN-LAST:event_stu_tableMouseClicked

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        // TODO add your handling code here:
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  // load the driver
            // line below needs to be modified to include the database name, user, and password (if any)
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=LearnerCare;user=medoo;password=medoo;");
            int row = stu_table.getSelectedRow();
            String value = (stu_table.getModel().getValueAt(row,0).toString());
            String query ="DELETE FROM Student WHERE USN="+value;
            PreparedStatement pst = con.prepareStatement(query);
            pst.executeUpdate();
            DefaultTableModel model = (DefaultTableModel)stu_table.getModel();
            model.setRowCount(0);
            show_student();
            JOptionPane.showMessageDialog(null,"Student Deleted Successfully");
            
        }
        catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(studentregistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deletebtnActionPerformed

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
        // TODO add your handling code here:
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  // load the driver
            // line below needs to be modified to include the database name, user, and password (if any)
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=LearnerCare;user=medoo;password=medoo;");
            String sql = "Selectt * from student where USN = ?";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, searchdata.getText());
            ResultSet rs = pst.executeQuery();
            if (rs.next()){
                String setusn = rs.getString("USN");
                USN.setText(setusn);
                String setfname = rs.getString("FirstName");
                fname.setText(setfname);
                String setmname = rs.getString("MiddleName");
                mname.setText(setmname);
                String setlname = rs.getString("LastName");
                lname.setText(setlname);
                String Optionalcourse = rs.getString("OptionalCourse");
                if (Optionalcourse.equals("music")){
            music.setSelected(true);
            pe.setSelected(false);
            elective.setSelected(false);
        }
        if (Optionalcourse.equals("Physical Education")){
            music.setSelected(false);
            pe.setSelected(true);
            elective.setSelected(false);
        }
        if (Optionalcourse.equals("Other Elective Subjects")){
            music.setSelected(false);
            pe.setSelected(false);
            elective.setSelected(true);
        }
        
        if (Optionalcourse.equals("Other Elective Subjects")){
            music.setSelected(false);
            pe.setSelected(false);
            elective.setSelected(true);
        }
        String semester = rs.getString ("Semester");
        if (semester.equals("Semester 1")){
            sem1.setSelected(true);
            sem2.setSelected(false);
            summer.setSelected(false);
        }
        if (semester.equals("Semester 2")){
            sem1.setSelected(false);
            sem2.setSelected(true);
            summer.setSelected(false);
        }
        if (semester.equals("Summer Course")){
            sem1.setSelected(false);
            sem2.setSelected(false);
            summer.setSelected(true);
        }
        
        
            }
        }
        catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(studentregistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_searchKeyReleased

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  // load the driver
            // line below needs to be modified to include the database name, user, and password (if any)
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=LearnerCare;user=medoo;password=medoo;");
            String sql = "Select * from student where USN = ?";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, searchdata.getText());
            ResultSet rs = pst.executeQuery();
            if (rs.next()){
                String setusn = rs.getString("USN");
                USN.setText(setusn);
                String setfname = rs.getString("FirstName");
                fname.setText(setfname);
                String setmname = rs.getString("MiddleName");
                mname.setText(setmname);
                String setlname = rs.getString("LastName");
                lname.setText(setlname);
                String Optionalcourse = rs.getString("OptionalCourse");
                if (Optionalcourse.equals("music")){
            music.setSelected(true);
            pe.setSelected(false);
            elective.setSelected(false);
        }
        if (Optionalcourse.equals("Physical Education")){
            music.setSelected(false);
            pe.setSelected(true);
            elective.setSelected(false);
        }
        if (Optionalcourse.equals("Other Elective Subjects")){
            music.setSelected(false);
            pe.setSelected(false);
            elective.setSelected(true);
        }
        
        if (Optionalcourse.equals("Other Elective Subjects")){
            music.setSelected(false);
            pe.setSelected(false);
            elective.setSelected(true);
        }
        String semester = rs.getString ("Semester");
        if (semester.equals("Semester 1")){
            sem1.setSelected(true);
            sem2.setSelected(false);
            summer.setSelected(false);
        }
        if (semester.equals("Semester 2")){
            sem1.setSelected(false);
            sem2.setSelected(true);
            summer.setSelected(false);
        }
        if (semester.equals("Summer Course")){
            sem1.setSelected(false);
            sem2.setSelected(false);
            summer.setSelected(true);
        }
        
        
            }
        }
        catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(studentregistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        fname.setText(" ");
        USN.setText(" ");
        mname.setText(" ");
        lname.setText(" ");
        buttonGroup1.clearSelection();
        
    }//GEN-LAST:event_resetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(studentregistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(studentregistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(studentregistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(studentregistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new studentregistration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField USN;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton deletebtn;
    private javax.swing.JRadioButton elective;
    private javax.swing.JTextField fname;
    private javax.swing.JButton insertstu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lname;
    private javax.swing.JTextField mname;
    private javax.swing.JRadioButton music;
    private javax.swing.JRadioButton pe;
    private javax.swing.JButton reset;
    private javax.swing.JButton search;
    private javax.swing.JTextField searchdata;
    private javax.swing.JCheckBox sem1;
    private javax.swing.JCheckBox sem2;
    private javax.swing.JTable stu_table;
    private javax.swing.JTabbedPane studentreg;
    private javax.swing.JCheckBox summer;
    private javax.swing.JButton update_student;
    // End of variables declaration//GEN-END:variables
}
